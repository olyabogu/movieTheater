DROP TABLE IF EXISTS USER CASCADE;
CREATE TABLE USER (
  USER_ID  INT NOT NULL AUTO_INCREMENT,
  NAME VARCHAR(50) UNIQUE NOT NULL,
  EMAIL  VARCHAR(50) NOT NULL,
  BIRTH_DATE DATE,
  USER_ROLE VARCHAR(50) NOT NULL,
  PASSWORD VARCHAR(100),
  USER_ACCOUNT_ID INT
);
ALTER TABLE USER ADD CONSTRAINT USER_PK PRIMARY KEY (USER_ID);

DROP TABLE IF EXISTS TICKET CASCADE;
CREATE TABLE TICKET(
	TICKET_ID INT NOT NULL AUTO_INCREMENT,
  IS_PURCHASED BOOLEAN,
	PRICE DECIMAL(5,2)
);
ALTER TABLE TICKET ADD CONSTRAINT TICKET_PK PRIMARY KEY (TICKET_ID);

DROP TABLE IF EXISTS EVENT CASCADE;
CREATE TABLE EVENT(
  EVENT_ID  INTEGER NOT NULL AUTO_INCREMENT,
  NAME VARCHAR(50) UNIQUE NOT NULL,
  RATING VARCHAR(10),
  BASE_PRICE DECIMAL(5,2)
);
ALTER TABLE EVENT ADD CONSTRAINT EVENT_PK PRIMARY KEY (EVENT_ID);

DROP TABLE IF EXISTS USER_TICKET_MP CASCADE;
CREATE TABLE USER_TICKET_MP(
  USER_ID INTEGER,
  TICKET_ID INTEGER
);
ALTER TABLE USER_TICKET_MP ADD CONSTRAINT FK_USER_TICKET_MP1 FOREIGN KEY(USER_ID) REFERENCES USER(USER_ID);
ALTER TABLE USER_TICKET_MP ADD CONSTRAINT FK_USER_TICKET_MP2 FOREIGN KEY(TICKET_ID) REFERENCES TICKET(TICKET_ID);

DROP TABLE IF EXISTS EVENT_DATES CASCADE;
CREATE TABLE EVENT_DATES(
  EVENT_ID INTEGER NOT NULL,
  DATE TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);
ALTER TABLE EVENT_DATES ADD CONSTRAINT FK_EVENT_DATES FOREIGN KEY(EVENT_ID) REFERENCES EVENT(EVENT_ID);

DROP TABLE IF EXISTS EVENT_TICKET_MP CASCADE;
CREATE TABLE EVENT_TICKET_MP(
  EVENT_ID INT,
  TICKET_ID INTEGER
);
ALTER TABLE EVENT_TICKET_MP ADD CONSTRAINT FK_EVENT_TICKET_MP1 FOREIGN KEY(EVENT_ID) REFERENCES EVENT(EVENT_ID);
ALTER TABLE EVENT_TICKET_MP ADD CONSTRAINT FK_EVENT_TICKET_MP2 FOREIGN KEY(TICKET_ID) REFERENCES TICKET(TICKET_ID);

DROP TABLE IF EXISTS ASSIGNED_AUDITORIUM CASCADE;
CREATE TABLE ASSIGNED_AUDITORIUM(
	EVENT_ID INTEGER,
	AUDITORIUM VARCHAR2(30),
	DATE TIMESTAMP
);

---STATISTICS TABLES
DROP TABLE IF EXISTS EVENT_BY_NAME CASCADE;
CREATE TABLE EVENT_BY_NAME(
  EVENT_ID INT,
  COUNTER INTEGER
);
ALTER TABLE EVENT_BY_NAME ADD CONSTRAINT FK_EVENT_BY_NAME1 FOREIGN KEY(EVENT_ID) REFERENCES EVENT(EVENT_ID);
ALTER TABLE EVENT_BY_NAME ADD CONSTRAINT EVENT_BY_NAME_UNIQUE UNIQUE (EVENT_ID);

DROP TABLE IF EXISTS EVENT_BY_PRICE CASCADE;
CREATE TABLE EVENT_BY_PRICE(
  EVENT_ID INT,
  COUNTER INTEGER
);
ALTER TABLE EVENT_BY_PRICE ADD CONSTRAINT FK_EVENT_BY_PRICE1 FOREIGN KEY(EVENT_ID) REFERENCES EVENT(EVENT_ID);

DROP TABLE IF EXISTS USER_DISCOUNT CASCADE;
CREATE TABLE USER_DISCOUNT(
  USER_ID INT,
  COUNTER INTEGER
);
ALTER TABLE USER_DISCOUNT ADD CONSTRAINT FK_USER_DISCOUNT1 FOREIGN KEY(USER_ID) REFERENCES USER(USER_ID);

DROP TABLE IF EXISTS DISCOUNT_STATISTICS CASCADE;
CREATE TABLE DISCOUNT_STATISTICS(
  DISCOUNT VARCHAR(20),
  COUNTER INTEGER
);
DROP TABLE IF EXISTS USER_ACCOUNT CASCADE;
CREATE TABLE USER_ACCOUNT (
	ACCOUNT_ID  INT NOT NULL AUTO_INCREMENT,
	AMOUNT DECIMAL(6, 2),
	CURRENCY VARCHAR2(3 CHAR)
);
ALTER TABLE USER_ACCOUNT ADD CONSTRAINT USER_ACCOUNT_PK PRIMARY KEY (ACCOUNT_ID);
ALTER TABLE USER ADD CONSTRAINT FK_USER1 FOREIGN KEY (USER_ACCOUNT_ID) REFERENCES USER_ACCOUNT(ACCOUNT_ID);

